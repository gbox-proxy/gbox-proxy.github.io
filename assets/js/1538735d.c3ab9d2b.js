"use strict";(self.webpackChunkgbox_proxy_github_io=self.webpackChunkgbox_proxy_github_io||[]).push([[589],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return c}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),u=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),m=u(n),c=a,g=m["".concat(p,".").concat(c)]||m[c]||d[c]||o;return n?r.createElement(g,i(i({ref:e},s),{},{components:n})):r.createElement(g,i({ref:e},s))}));function c(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8138:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"monitoring",title:"Monitoring",sidebar_label:"Monitoring",image:"https://gbox-proxy.github.io/img/gbox-full.png",slug:"/monitoring"},p=void 0,u={unversionedId:"monitoring",id:"monitoring",title:"Monitoring",description:"Prometheus is a monitoring platform that collects metrics from monitored targets by scraping metrics HTTP endpoints on these targets.",source:"@site/docs/06-monitoring.mdx",sourceDirName:".",slug:"/monitoring",permalink:"/monitoring",editUrl:"https://github.com/gbox-proxy/gbox-proxy.github.io/edit/main/docs/06-monitoring.mdx",tags:[],version:"current",lastUpdatedBy:"Minh Vuong",lastUpdatedAt:1651746649,formattedLastUpdatedAt:"5/5/2022",sidebarPosition:6,frontMatter:{id:"monitoring",title:"Monitoring",sidebar_label:"Monitoring",image:"https://gbox-proxy.github.io/img/gbox-full.png",slug:"/monitoring"},sidebar:"main",previous:{title:"Securing",permalink:"/securing"},next:{title:"Limitations",permalink:"/limitations"}},s={},d=[{value:"Enable metrics endpoint",id:"enable-metrics-endpoint",level:2},{value:"GBox metrics",id:"gbox-metrics",level:2},{value:"caddy_http_gbox_operations_in_flight",id:"caddy_http_gbox_operations_in_flight",level:3},{value:"caddy_http_gbox_operation_total",id:"caddy_http_gbox_operation_total",level:3},{value:"caddy_http_gbox_operation_duration",id:"caddy_http_gbox_operation_duration",level:3},{value:"caddy_http_gbox_caching_total",id:"caddy_http_gbox_caching_total",level:3}],m={toc:d};function c(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io"},"Prometheus")," is a monitoring platform that collects metrics from monitored targets by scraping metrics HTTP endpoints on these targets.\nAs well as helping you to display metrics with a dashboard tool like ",(0,o.kt)("a",{parentName:"p",href:"https://grafana.io"},"Grafana"),", Prometheus is also used for ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/alerting/latest/overview/"},"alerting"),"."),(0,o.kt)("p",null,"The GBox emit metrics help you to monitor GraphQL operation durations, total operation in flight and caching statues. In additional, GBox is a custom build of ",(0,o.kt)("a",{parentName:"p",href:"https://caddyserver.com"},"the Caddy web server")," including the ",(0,o.kt)("inlineCode",{parentName:"p"},"http.handlers.gbox")," module,\nso it has all ",(0,o.kt)("a",{parentName:"p",href:"https://caddyserver.com/docs/metrics#caddys-metrics"},"Caddy metrics"),"."),(0,o.kt)("h2",{id:"enable-metrics-endpoint"},"Enable metrics endpoint"),(0,o.kt)("p",null,"Metrics endpoint disabled by default, to enable it, you need to set ",(0,o.kt)("inlineCode",{parentName:"p"},"GBOX_ENABLED_METRICS")," environment variable to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("p",null,"By default, metrics endpoint's ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics"),", if you want to change it, try to set ",(0,o.kt)("inlineCode",{parentName:"p"},"GBOX_METRICS_PATH")," environment variable."),(0,o.kt)("h2",{id:"gbox-metrics"},"GBox metrics"),(0,o.kt)("h3",{id:"caddy_http_gbox_operations_in_flight"},"caddy_http_gbox_operations_in_flight"),(0,o.kt)("p",null,"A gauge of the number of operations currently being handled by this server."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Label"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_name"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_type"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation type (query/mutation/subscription)")))),(0,o.kt)("h3",{id:"caddy_http_gbox_operation_total"},"caddy_http_gbox_operation_total"),(0,o.kt)("p",null,"A counter of GraphQL query operations made."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Label"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_name"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_type"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation type (query/mutation/subscription)")))),(0,o.kt)("h3",{id:"caddy_http_gbox_operation_duration"},"caddy_http_gbox_operation_duration"),(0,o.kt)("p",null,"A histogram of the GraphQL query operations durations."),(0,o.kt)("p",null,"The buckets are currently not configurable. The default ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/prometheus/client_golang/prometheus#pkg-variables"},"prometheus.DefBuckets"),"\nset of buckets is used (5ms, 10ms, 25ms, 50ms, 100ms, 250ms, 500ms, 1s, 2.5s, 5s, and 10s)."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Label"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_name"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_type"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation type (query/mutation/subscription)")))),(0,o.kt)("h3",{id:"caddy_http_gbox_caching_total"},"caddy_http_gbox_caching_total"),(0,o.kt)("p",null,"A counter of GraphQL query operations caching statues."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Label"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"operation_name"),(0,o.kt)("td",{parentName:"tr",align:null},"GraphQL query operation name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"status"),(0,o.kt)("td",{parentName:"tr",align:null},"Cache statuses of GraphQL query operations  (HIT/MISS/PASS)")))))}c.isMDXComponent=!0}}]);